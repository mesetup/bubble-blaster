//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyUnusedCatchParameter

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
            name = "sonatype"
        }
        maven {
            url = "https://maven.atlassian.com/3rdparty/"
        }
        google()
    }
    dependencies {
        classpath group: 'commons-io', name: 'commons-io', version: '2.8.0'
        classpath "com.google.code.gson:gson:2.8.+"
//        classpath "io.freefair.gradle:lombok-plugin:6.1.0-m3"
    }
}

plugins {
    id "groovy"
    id 'java'
    id 'java-library'
    id "idea"
    id "io.freefair.lombok"
    id 'maven-publish'
}

//apply plugin: "io.freefair.lombok"

//apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

version "1.0.0"
group 'com.ultreon' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'javax-annotations'
jar.archiveVersion.set(version)

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '16' // Need this here so eclipse task generates correctly.

//GroovyShell shell = new GroovyShell(this.getClass().getClassLoader(), this.binding);
//shell.run(file, arguments);

println("Current version: " + version)
println("Project: " + group + ":" + archivesBaseName)
println("Bulding a Java " + compileJava.targetCompatibility + " project...")

repositories {
    mavenCentral()
    google()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/"; name "Sonatype" }
    maven { url "https://maven.atlassian.com/3rdparty/" }
    maven { url "https://repo.spring.io/libs-milestone/" }
    maven { url "https://maven.imagej.net/content/repositories/public/" }
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {

}

jar {
    manifest {
        attributes 'Implementation-Title': 'QBubbles',
                'Implementation-Vendor': 'QTech Community',
                'Implementation-Version': "1.0-indev1",
                'Main-Class': 'com.qtech.preloadr.PreLoader'
    }
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url System.getenv("MAVEN_REPO")
            name "UltreonMaven"
        }
    }
}
